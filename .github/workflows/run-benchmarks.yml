name: Run Prime Benchmarks

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

permissions:
  contents: write

jobs:
  run-benchmarks:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up GraalVM
        uses: graalvm/setup-graalvm@v1
        with:
          version: '22.3.1' # Specify the GraalVM version
          java-version: '17' # Use Java 17

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Install GCC
        run: sudo apt-get update && sudo apt-get install -y g++

      - name: Create result files
        run: |
          mkdir -p results
          touch results/java_result.json
          touch results/python_result.json
          touch results/cpp_result.json
          touch results/js_result.json

      - name: Compile and run Java benchmark
        run: |
          cd benchmarks/java
          javac PrimeBenchmark.java
          java PrimeBenchmark > ../../results/java_result.json

      - name: Run Python benchmark
        run: python3 benchmarks/python/prime_benchmark.py > results/python_result.json

      - name: Compile and run C++ benchmark
        run: |
          g++ -o benchmarks/cpp/PrimeBenchmark benchmarks/cpp/PrimeBenchmark.cpp
          ./benchmarks/cpp/PrimeBenchmark > results/cpp_result.json

      - name: Run JavaScript benchmark
        run: node benchmarks/js/prime_benchmark.js > results/js_result.json

      - name: Aggregate results
        run: |
          echo "# Prime Counting Benchmark Results" > results_summary.md
          echo "" >> results_summary.md
          echo "This file contains the results of running a prime-counting algorithm across various programming languages." >> results_summary.md
          echo "" >> results_summary.md
          echo "**Benchmark Details:**" >> results_summary.md
          echo "- Problem size: Count primes up to 1,000,000." >> results_summary.md
          echo "- Environment: GitHub-hosted Ubuntu runners." >> results_summary.md
          echo "- Timings: Only the second run of the algorithm is measured for warm-up optimization." >> results_summary.md
          echo "" >> results_summary.md
          echo "| Language   | Time (ns)         | Time (ms)         | Time (s)          | % Slower than Fastest |" >> results_summary.md
          echo "|------------|-------------------|-------------------|-------------------|-----------------------|" >> results_summary.md
          results=()
          for file in results/*.json; do
          lang=$(basename $file _result.json)
          time=$(grep -oP '"time_ns": \d+' $file | awk '{print $2}')
          results+=("$lang:$time")
          done
          sorted_results=$(echo "${results[@]}" | tr ' ' '\n' | sort -t: -nk2)
          fastest_time=0
          for result in $sorted_results; do
          lang=$(echo $result | cut -d: -f1)
          time=$(echo $result | cut -d: -f2)
          time_ms=$(awk "BEGIN {print $time / 1e6}")
          time_s=$(awk "BEGIN {print $time / 1e9}")
          if [ $fastest_time -eq 0 ]; then
           fastest_time=$time
           percent_slower="0%"
          else
           percent_slower=$(awk "BEGIN {print (($time - $fastest_time) / $fastest_time) * 100}")
           percent_slower=$(printf "%.2f%%" $percent_slower)
          fi
          echo "| ${lang^}      | ${time} ns       | ${time_ms} ms      | ${time_s} s      | ${percent_slower}        |" >> results_summary.md
          done

      - name: Commit results
        run: |
          git config --global user.name "GitHub Actions Bot"
          git config --global user.email "actions@github.com"
          git add results_summary.md
          git commit -m "Update benchmark results"
          git push